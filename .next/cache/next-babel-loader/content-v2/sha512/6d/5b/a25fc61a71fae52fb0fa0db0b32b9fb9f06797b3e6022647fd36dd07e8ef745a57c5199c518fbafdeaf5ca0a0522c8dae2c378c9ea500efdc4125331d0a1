{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rmhar\\\\OneDrive\\\\Desktop\\\\code stuff\\\\react\\\\Maximilian\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 11\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://ryan:1badpassword@cluster0.1k43r.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://ryan:1badpassword@cluster0.1k43r.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/rmhar/OneDrive/Desktop/code stuff/react/Maximilian/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,oCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAC3B,sBAAQ,QAAC,YAAD;AACR,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADhB;AAER,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFhB;AAGR,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAHlB;AAIR,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJtB;AAAA;AAAA;AAAA;AAAA,UAAR;AAMD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAM;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADsB,KAAb,CAAZ;AAFH,GAAN;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAE3C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAGhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAd,GAA1B,CAAvB;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAnB,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFZ;AAGVD,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAHZ;AAIVG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB,WAJlB;AAKVD,QAAAA,OAAO,EAAEsB,cAAc,CAACtB;AALd;AADP;AADF,GAAP;AAYD;AAED,eAAeL,aAAf","sourcesContent":["\r\nimport MeetupDetail from '../components/meetups/MeetupDetail';  \r\nimport {MongoClient, ObjectId} from 'mongodb';\r\n\r\n\r\nfunction MeetupDetails(props){\r\n  return  <MeetupDetail  \r\n  image={props.meetupData.image} \r\n  title={props.meetupData.title} \r\n  address={props.meetupData.address} \r\n  description={props.meetupData.description} />\r\n\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://ryan:1badpassword@cluster0.1k43r.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1}).toArray();\r\n  client.close();\r\n\r\n\r\n  return{\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {meetupId: meetup._id.toString() },\r\n    })),\r\n    \r\n};\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://ryan:1badpassword@cluster0.1k43r.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = meetupsCollection.findOne({_id: ObjectId(meetupId),\r\n  })\r\n\r\n  console.log(selectedMeetup)\r\n  client.close();\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n        address: selectedMeetup.address\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}